name: Continuous Integration and Delivery

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/summarizer

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
#  test:
#    name: Test Docker Image
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2.4.0
#        with:
#          ref: main
#      - name: Log in to GitHub Packages
#        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Pull image
#        run: |
#          docker pull ${{ env.IMAGE }}:latest || true
#      - name: Build image
#        run: |
#          docker build \
#            --cache-from ${{ env.IMAGE }}:latest \
#            --tag ${{ env.IMAGE }}:latest \
#            --file ./src/Dockerfile.prod \
#            "./src"
#      - name: Run container
#        run: |
#          docker run \
#            -d \
#            --name text-summariser \
#            -e PORT=8765 \
#            -e ENVIRONMENT=dev \
#            -e DATABASE_URL=sqlite://sqlite.db \
#            -e DATABASE_TEST_URL=sqlite://sqlite.db \
#            -p 5003:8765 \
#            ${{ env.IMAGE }}:latest
#      - name: Pytest
#        run: docker exec text-summariser python -m pytest .
#      - name: Flake8
#        run: docker exec text-summariser python -m flake8 .
#      - name: Black
#        run: docker exec text-summariser -m black . --check
#      - name: isort
#        run: docker exec text-summariser -m isort . --check-only